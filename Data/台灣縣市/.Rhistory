geom_path(data = map,
aes(x = long, y = lat, group = group),
color = 'black', size = .2) +
xlim(119, 122) +
ylim(21, 25)
tp.map$COUNTYNAME
# 選擇範圍 北北基
map <- tp.map[tp.map$COUNTYNAME %in% c("臺南市","高雄市","屏東縣", "台東縣") ,]
ggplot() +
geom_path(data = map,
aes(x = long, y = lat, group = group),
color = 'black', size = .2) +
xlim(119, 122) +
ylim(21, 25)
# 選擇範圍 北北基
map <- tp.map[tp.map$COUNTYNAME %in% c("臺南市","高雄市","屏東縣", "臺東縣") ,]
ggplot() +
geom_path(data = map,
aes(x = long, y = lat, group = group),
color = 'black', size = .2) +
xlim(119, 122) +
ylim(21, 25)
fortify(map)
fortify(tp.map)
tp.map <- maptools::readShapeSpatial("COUNTY_MOI_1081121.shp")
ggplot() +
geom_path(data = map,
aes(x = long, y = lat, group = group),
color = 'black', size = .2)
# map data ----
# 輸入資料 載點:https://data.gov.tw/dataset/7442 透過terminal解壓縮
setwd("~/Documents/2_learning/2_PhD Courses/10_Spatial-Statistics/FinalProject/data/county")
tp.map <- maptools::readShapeSpatial("COUNTY_MOI_1081121.shp")
tp.map <- rgdal::readOGR("COUNTY_MOI_1081121.shp")
ggplot() +
geom_path(data = map,
aes(x = long, y = lat, group = group),
color = 'black', size = .2)
tp.map <- rgdal::readOGR("COUNTY_MOI_1081121.shp")
ggplot() +
geom_path(data = tp.map,
aes(x = long, y = lat, group = group),
color = 'black', size = .2)
ggplot() +
geom_path(data = tp.map,
aes(x = long, y = lat, group = group))
setwd("~/Documents/4_Teaching/空間資料教學/Data/台灣直轄市以及縣(市)行政區域界線圖資")
tp.map <- rgdal::readOGR("COUNTY_MOI_1090820.shp")
ggplot() +
geom_path(data = tp.map,
aes(x = long, y = lat, group = group))
class(tp.map)
fortify(tp.map)
tp.map.df <- fortify(tp.map)
dim(tp.map.df)
ggplot() +
geom_path(data = map,
aes(x = long, y = lat, group = group),
color = 'black', size = .2) +
xlim(119, 122) +
ylim(21, 25)
ggplot() +
geom_path(data = map,
aes(x = long, y = lat, group = group),
color = 'black', size = .2) +
xlim(119.5, 122) +
ylim(21, 24.5)
ggplot() +
geom_path(data = map,
aes(x = long, y = lat, group = group)) +
xlim(119.5, 122) +
ylim(21, 24.5)
shp_df <- broom::tidy(shp）
shp_df <- broom::tidy(shp)
shp_df <- broom::tidy(map)
map <- ggplot() + geom_polygon(data = map, aes(x = long, y = lat, group = group), colour = "black", fill = NA)
cnames <- aggregate(cbind(long, lat) ~ id, data=map, FUN=mean)
map.df <- fortify(map)
map.df
fortify(map)
fortify(tp.map)
class(map)
class(tp.map)
tp.map.df <- fortify(tp.map)
map <- ggplot() + geom_polygon(data = tp.map, aes(x = long, y = lat, group = group), colour = "black", fill = NA)
cnames <- aggregate(cbind(long, lat) ~ id, data=tp.map.df, FUN=mean)
map + geom_text(data = cnames, aes(x = long, y = lat, label = id), size = 4) + theme_void()
str(tp.map)
tp.map@data
tp.map@polygons
tp.map@bbox
tp.map@proj4string
slot(tp.map)
slotsFromS3(tp.map)
slotNames(tp.map)
slot(tp.map)
map <- ggplot() + geom_polygon(data = tp.map, aes(x = long, y = lat, group = group), colour = "black", fill = NA)
cnames <- aggregate(cbind(long, lat) ~ id, data=tp.map.df, FUN=mean)
map + geom_text(data = cnames, aes(x = long, y = lat, label = id), size = 4) + theme_void()
map <- tp.map[c(1,2,3),]
ggplot() +
geom_path(data = map,
aes(x = long, y = lat, group = group))
map <- tp.map[c("臺南市","高雄市","屏東縣", "臺東縣"),]
tp.map@data
tp.map.df[1:3,]
tp.map$COUNTYID
tp.map[[1]]
tp.map[[2]]
class(map)
subset(tp.map, tp.map$COUNTYNAME %in% c("臺南市","高雄市","屏東縣", "臺東縣"))
map <- subset(tp.map, tp.map$COUNTYNAME %in% c("臺南市","高雄市","屏東縣", "臺東縣"))
class(map)
ggplot() +
geom_path(data = map,
aes(x = long, y = lat, group = group))
tp.map.gg <- ggplot() + geom_polygon(data = tp.map, aes(x = long, y = lat, group = group), colour = "black", fill = NA)
tp.map.gg$data[1,]
tp.map.gg$data
map.df <- fortify(map)
map.df[1,]
table(map.df[,6])
ggplot() +
geom_polygon(data = map,
aes(x = long, y = lat, group = group, fill = id),
colour = "black") +
theme_void()
ggplot() +
geom_path(data = map,
aes(x = long, y = lat, group = group)) +
xlim(119.5, 122) +
ylim(21, 24.5)
ggplot() +
geom_polygon(data = map,
aes(x = long, y = lat, group = group, fill = id),
colour = "black") +
theme_void()
ggplot() +
geom_polygon(data = map,
aes(x = long, y = lat, group = group, fill = id),
colour = "black") +
theme_void() +
xlim(119.5, 122) +
ylim(21, 24.5)
tp.map.df$id
tp.map$COUNTYID
tp.map$COUNTYCODE
tp.map$COUNTYNAME
tp.map$COUNTYENG
map@data
map.df
map@bbox
map@polygons
map@bbox
class(tp.map)
map.df
table(map.df$id)
df_with_variables < -data.frame(id = c(15,16,21,9), value = c(1.1,2,3.4,5))
spdf = SpatialPolygonsDataFrame(map)
df_with_variables < -data.frame(id = c(15,16,21,9), value = c(1.1,2,3.4,5))
df_with_variables <- data.frame(id = c(15,16,21,9), value = c(1.1,2,3.4,5))
spdf = SpatialPolygonsDataFrame(map)
tidy_spdf = tidy(map)
tidy_spdf = broom::tidy(map)
plotData = left_join(tidy_spdf,df_with_variables,by='id')
plotData = broom::left_join(tidy_spdf,df_with_variables,by='id')
plotData = dplyr::left_join(tidy_spdf,df_with_variables,by='id')
class(df_with_variables$id)
df_with_variables <- as.factor(df_with_variables)
tidy_spdf = broom::tidy(map)
plotData = dplyr::left_join(tidy_spdf,df_with_variables,by='id')
class(map.df$id)
df_with_variables <- as.character(df_with_variables)
tidy_spdf = broom::tidy(map)
plotData = dplyr::left_join(tidy_spdf,df_with_variables,by='id')
tidy_spdf
df_with_variables
df_with_variables <- data.frame(id = c(15,16,21,9), value = c(1.1,2,3.4,5))
df_with_variables$id <- as.character(df_with_variables)
tidy_spdf = broom::tidy(map)
plotData = dplyr::left_join(tidy_spdf, df_with_variables, by='id')
ggplot()  + geom_polygon(data=plotData2, aes(fill=wmHrs,x=long,y=lat,group=Suburb)) # populate it!
ggplot()  + geom_polygon(data=plotData, aes(fill=wmHrs,x=long,y=lat,group=Suburb)) # populate it!
ggplot()  + geom_polygon(data=plotData, aes(fill=value,x=long,y=lat,group=Suburb)) # populate it!
ggplot()  + geom_polygon(data=plotData, aes(fill=value,x=long,y=lat,group=group)) # populate it!
ggplot() +
geom_polygon(data=plotData,
aes(x=long,y=lat,group=group,fill=value)) +
theme_void() +
xlim(119.5, 122) +
ylim(21, 24.5)
ggplot() +
geom_polygon(data = plotData,
aes(x=long, y=lat, group=group, fill=id)) +
theme_void() +
xlim(119.5, 122) +
ylim(21, 24.5)
ggplot() +
geom_polygon(data = plotData,
aes(x=long, y=lat, group=group, fill = value)) +
theme_void() +
xlim(119.5, 122) +
ylim(21, 24.5)
ggplot() +
geom_polygon(data = plotData,
aes(x=long, y=lat, group=group, fill = s)) +
theme_void() +
xlim(119.5, 122) +
ylim(21, 24.5)
plotData$id
plotData$value
df_with_variables$value
df_with_variables <- data.frame(id = c(15,16,21,9), value = c(1.1,2,3.4,5))
df_with_variables$id <- as.character(df_with_variables)
tidy_spdf = broom::tidy(map)
tidy_spdf
map.df
plotData = dplyr::left_join(map.df, df_with_variables, by='id')
ggplot() +
geom_polygon(data = plotData,
aes(x=long, y=lat, group=group, fill = value)) +
theme_void() +
xlim(119.5, 122) +
ylim(21, 24.5)
plotData$value
df_with_variables
df_with_variables <- data.frame(id = c(15,16,21,9), value = c(1.1,2,3.4,5))
df_with_variables
df_with_variables$id <- as.character(df_with_variables$id)
plotData = dplyr::left_join(map.df, df_with_variables, by='id')
ggplot() +
geom_polygon(data = plotData,
aes(x=long, y=lat, group=group, fill = value)) +
theme_void() +
xlim(119.5, 122) +
ylim(21, 24.5)
ggplot() +
geom_polygon(data = plotData,
aes(x=long, y=lat, group=group, fill = value)) +
# theme_void() +
xlim(119.5, 122) +
ylim(21, 24.5)
# points
points <- data.frame(long = c(120.3, 121.2), lat = c(23.1, 22.7))
ggplot() +
geom_polygon(data = plotData,
aes(x=long, y=lat, group=group, fill = value))
ggplot() +
geom_polygon(data = map,
aes(x=long, y=lat, group=group))
ggplot() +
geom_polygon(data = map,
aes(x=long, y=lat, group=group)) +
geom_point(data = points,
aes(x = long,
y = lat)) +
theme_void() +
xlim(119.5, 122) +
ylim(21, 24.5) +
# ------------------------------------------------------------------------------
tp.map.gg <- ggplot() + geom_polygon(data = tp.map, aes(x = long, y = lat, group = group))
ggplot() +
geom_polygon(data = map,
aes(x=long, y=lat, group=group)) +
geom_point(data = points,
aes(x = long,
y = lat)) +
theme_void() +
xlim(119.5, 122) +
ylim(21, 24.5) +
# ------------------------------------------------------------------------------
tp.map.gg <- ggplot() + geom_polygon(data = tp.map, aes(x = long, y = lat, group = group))
ggplot() +
geom_polygon(data = map,
aes(x=long, y=lat, group=group))
ggplot() +
geom_polygon(data = map,
aes(x=long, y=lat, group=group)) +
geom_point(data = points,
aes(x = long,
y = lat))
ggplot() +
geom_path(data = map,
aes(x = long, y = lat, group = group)) +
xlim(119.5, 122) +
ylim(21, 24.5)
ggplot() +
geom_path(data = map,
aes(x=long, y=lat, group=group)) +
geom_point(data = points,
aes(x = long,
y = lat)) +
theme_void() +
xlim(119.5, 122) +
ylim(21, 24.5) +
# ------------------------------------------------------------------------------
tp.map.gg <- ggplot() + geom_polygon(data = tp.map, aes(x = long, y = lat, group = group))
ggplot() +
geom_path(data = map,
aes(x=long, y=lat, group=group)) +
geom_point(data = points,
aes(x = long,
y = lat))
# points
points <- data.frame(long = c(120.3, 121.2), lat = c(23.1, 22.8))
ggplot() +
geom_path(data = map,
aes(x=long, y=lat, group=group)) +
geom_point(data = points,
aes(x = long,
y = lat)) +
theme_void() +
xlim(119.5, 122) +
ylim(21, 24.5) +
# ------------------------------------------------------------------------------
tp.map.gg <- ggplot() + geom_polygon(data = tp.map, aes(x = long, y = lat, group = group))
# ------------------------------------------------------------------------------
tp.map.gg <- ggplot() + geom_polygon(data = tp.map, aes(x = long, y = lat, group = group))
ggplot() +
geom_path(data = map,
aes(x=long, y=lat, group=group)) +
geom_point(data = points,
aes(x = long,
y = lat)) +
theme_void() +
xlim(119.5, 122) +
ylim(21, 24.5)
# points
points <- data.frame(long = c(120.3, 121.2), lat = c(23.1, 22.9))
ggplot() +
geom_path(data = map,
aes(x=long, y=lat, group=group)) +
geom_point(data = points,
aes(x = long,
y = lat)) +
theme_void() +
xlim(119.5, 122) +
ylim(21, 24.5)
library(sp)  # vector data
library(raster)  # raster data
library(rgdal)  # input/output, projections
library(rgeos)  # geometry ops
library(spdep)  # spatial dependence
coords = cbind(x, y)
Sr1 = Polygon(cbind(c(2,4,4,1,2),c(2,3,5,4,2)))
Sr1
Srs1 = Polygons(list(Sr1), "s1")
SpP = SpatialPolygons(Srs1, 1)
SpP = SpatialPolygons(Srs1)
Srs1 = Polygons(list(Sr1), "s1")
SpP = SpatialPolygons(Srs1)
plot(Srs1, col = 1:3, pbg="white")
plot(Srs1）
plot(Srs1)
SpP = SpatialPolygons(Srs1)
Srs1 = Polygons(list(Sr1), "s1")
Srs1
SpP = SpatialPolygons(Srs1)
list(Srs1)
class(Srs1)
SpP = SpatialPolygons(list(Sr1))
SpP = SpatialPolygons(list(Srs1))
plot(Srs1)
plot(SpP)
Sr1
Sr1 = Polygon(cbind(c(2,4,4,1,2),c(2,3,5,4,2)))
Sr2 = Polygon(cbind(c(5,4,2,5),c(2,3,2,2)))
Sr3 = Polygon(cbind(c(4,4,5,10,4),c(5,3,2,5,5)))
Sr4 = Polygon(cbind(c(5,6,6,5,5),c(4,4,3,3,4)), hole = TRUE)
Srs1 = Polygons(list(Sr1), "s1")
Srs2 = Polygons(list(Sr2), "s2")
Srs3 = Polygons(list(Sr3, Sr4), "s3/4")
SpP = SpatialPolygons(list(Srs1,Srs2,Srs3), 1:3)
plot(SpP, col = 1:3, pbg="white")
SpP$s1
SpP$s1
SpP@polygons
map@data
SpP@polygons
attr = data.frame(a=1:3, b=3:1, row.names=c("s3/4", "s2", "s1"))
SrDf = SpatialPolygonsDataFrame(SpP, attr)
as(SrDf, "data.frame")
plot(SrDf)
SrDf@data
library(httr)
library(RCurl)
library(XML)
urldata <- getURL("https://cran.r-project.org/web/packages/available_packages_by_date.html")
CRAN <- readHTMLTable(urldata,
stringsAsFactors = FALSE)
CRAN_packages <- CRAN[["NULL"]][[" Package "]]
packages_df <- as.data.frame(CRAN_packages,
stringsAsFactors = FALSE)
list_of_citations <- NULL
for (f in 1:nrow(packages_df)) {
tryCatch({
list_of_citations <<- append(list_of_citations,
citation(package = packages_df$CRAN_packages[f],
auto = TRUE))
}, error=function(e){
cat(paste("No citations available for package",
packages_df$CRAN_packages[f],
sep = " "),
conditionMessage(e), "\n")
})
}
list_of_citations$title
citation(sp)
dimensions(map)
map[[1]]
map[[2]]
map[1]
map[1,1]
map[1,"COUNTRYID"]
map[1:2,"COUNTRYID"]
map@data
map[1:2,"COUNTYID"]
bbbox(map)
bbox(map)
spplot(map)
tp.map@data
tp.map.df
tp.map.df <- fortify(tp.map)
tp.map.df
ggplot() +
geom_path(data = map,
aes(x = long, y = lat, group = group)) +
xlim(119.5, 122) +
ylim(21, 24.5)
library(ggplot2)
library(maptools)
# map data ----
# 輸入資料 載點:https://data.gov.tw/dataset/7442 透過terminal解壓縮
setwd("~/Documents/4_Teaching/空間資料教學/Data/台灣直轄市以及縣(市)行政區域界線圖資")
tp.map <- rgdal::readOGR("COUNTY_MOI_1090820.shp")
tp.map@data
tp.map@polygons
tp.map@bbox
tp.map@proj4string
class(tp.map)
names(tp.map)
tp.map$COUNTYID
tp.map$COUNTYCODE
tp.map$COUNTYNAME
tp.map$COUNTYENG
tp.map.df <- fortify(tp.map)
dim(tp.map.df)
ggplot() +
geom_path(data = tp.map,
aes(x = long, y = lat, group = group))
# subset
map <- subset(tp.map, tp.map$COUNTYNAME %in% c("臺南市","高雄市","屏東縣", "臺東縣"))
map.df <- fortify(map)
ggplot() +
geom_path(data = map,
aes(x = long, y = lat, group = group)) +
xlim(119.5, 122) +
ylim(21, 24.5)
library(sp)
ggplot() +
geom_path(data = map,
aes(x = long, y = lat, group = group)) +
xlim(119.5, 122) +
ylim(21, 24.5)
dev.off()
ggplot() +
geom_path(data = map,
aes(x = long, y = lat, group = group)) +
xlim(119.5, 122) +
ylim(21, 24.5)
ggplot() +
xlim(119.5, 122) +
ylim(21, 24.5) +
geom_path(data = map,
aes(x = long, y = lat, group = group))
ggplot() +
geom_polygon(data = map,
aes(x = long, y = lat, group = group, fill = id),
colour = "black") +
theme_void() +
xlim(119.5, 122) +
ylim(21, 24.5)
count <- data.frame(id = c(15,16,21,9), value = c(1.1,2,3.4,5))
count$id <- as.character(count$id)
plotData = dplyr::left_join(map.df, count, by='id')
ggplot() +
geom_polygon(data = plotData,
aes(x=long, y=lat, group=group, fill = value)) +
theme_void() +
xlim(119.5, 122) +
ylim(21, 24.5)
# points
points <- data.frame(long = c(120.3, 121.2), lat = c(23.1, 22.9))
ggplot() +
geom_path(data = map,
aes(x=long, y=lat, group=group)) +
geom_point(data = points,
aes(x = long,
y = lat)) +
theme_void() +
xlim(119.5, 122) +
ylim(21, 24.5)
ggplot() +
geom_path(data = map,
aes(x=long, y=lat, group=group)) +
geom_point(data = points,
aes(x = long,
y = lat),
color = "blue") +
theme_void() +
xlim(119.5, 122) +
ylim(21, 24.5)
